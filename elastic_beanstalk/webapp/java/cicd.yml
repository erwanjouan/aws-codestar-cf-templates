AWSTemplateFormatVersion: 2010-09-09
Conditions:
  CreateCodeBuildResources: !Equals
    - true
    - true
  CreateWebSiteS3Bucket: !Equals
    - true
    - false
Description: A Java Spring web application deployed to AWS Elastic Beanstalk.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Application
        Parameters:
          - ProjectId
  CreateCodeBuild: true
  Platform: Tomcat 8.5 Corretto 8
  ProjectTemplateId: webapp-javaspring-eb
  WebsiteS3Bucket: AWS::NoValue
Parameters:
  CodeS3Bucket:
    Default: ''
    NoEcho: true
    Type: String
  CodeS3Key:
    Default: ''
    NoEcho: true
    Type: String
  InstanceType:
    Default: t3.micro
    Description: The Amazon EC2 instance type to use.
    Type: String
  KeyPairName:
    Description: The name of the key pair used to make SSH connections to Amazon EC2 instances.
    Type: AWS::EC2::KeyPair::KeyName
  ProjectId:
    AllowedPattern: ^[a-z]([a-z0-9-])+$
    ConstraintDescription: Project IDs must be between 2 and 15 characters, begin with a letter, and only contain lowercase letters, numbers, and hyphens (-).
    Description: Project ID.
    MaxLength: 15
    MinLength: 2
    Type: String
  RepositoryName:
    Description: AWS CodeCommit repository name.
    MaxLength: 100
    MinLength: 1
    Type: String
  SolutionStackName:
    Default: default
    Description: The name of the solution stack used to launch environments in AWS Elastic Beanstalk.
    Type: String
  SubnetId:
    Default: subnet-none
    Description: The name of the VPC subnet to use for Amazon EC2 instances launched for this project.
    Type: String
  VpcId:
    Description: The ID of the Amazon Virtual Private Cloud (VPC) to use for Amazon EC2 instances.
    Type: AWS::EC2::VPC::Id
Resources:
  CloudFormationTrustRole:
    DeletionPolicy: Retain
    Description: Creating service role in IAM for AWS CloudFormation
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - apigateway:DELETE
                  - apigateway:GET
                  - apigateway:PATCH
                  - apigateway:POST
                  - apigateway:PUT
                  - autoscaling:CreateAutoScalingGroup
                  - autoscaling:CreateLaunchConfiguration
                  - autoscaling:DeleteAutoScalingGroup
                  - autoscaling:DeleteLaunchConfiguration
                  - autoscaling:DeleteNotificationConfiguration
                  - autoscaling:DescribeAutoScalingGroup
                  - autoscaling:DescribeAutoScalingGroups
                  - autoscaling:DescribeLaunchConfigurations
                  - autoscaling:DescribeNotificationConfigurations
                  - autoscaling:DescribeScalingActivities
                  - autoscaling:PutNotificationConfiguration
                  - autoscaling:ResumeProcesses
                  - autoscaling:SuspendProcesses
                  - autoscaling:UpdateAutoScalingGroup
                  - codedeploy:CreateApplication
                  - codedeploy:CreateDeployment
                  - codedeploy:CreateDeploymentConfig
                  - codedeploy:CreateDeploymentGroup
                  - codedeploy:DeleteApplication
                  - codedeploy:DeleteDeployment
                  - codedeploy:DeleteDeploymentConfig
                  - codedeploy:DeleteDeploymentGroup
                  - codedeploy:GetDeployment
                  - codedeploy:GetDeploymentConfig
                  - codedeploy:GetDeploymentGroup
                  - codedeploy:RegisterApplicationRevision
                  - codestar:SyncResources
                  - config:DeleteConfigRule
                  - config:DescribeConfigRules
                  - config:ListTagsForResource
                  - config:PutConfigRule
                  - config:TagResource
                  - config:UntagResource
                  - dynamodb:CreateTable
                  - dynamodb:DeleteTable
                  - dynamodb:DescribeContinuousBackups
                  - dynamodb:DescribeTable
                  - dynamodb:DescribeTimeToLive
                  - dynamodb:ListTagsOfResource
                  - dynamodb:TagResource
                  - dynamodb:UntagResource
                  - dynamodb:UpdateContinuousBackups
                  - dynamodb:UpdateTable
                  - dynamodb:UpdateTimeToLive
                  - ec2:AllocateAddress
                  - ec2:AssociateAddress
                  - ec2:AssociateIamInstanceProfile
                  - ec2:AttachVolume
                  - ec2:CreateSecurityGroup
                  - ec2:CreateTags
                  - ec2:DescribeAddresses
                  - ec2:DescribeAvailabilityZones
                  - ec2:DescribeIamInstanceProfileAssociations
                  - ec2:DescribeImages
                  - ec2:DescribeInstances
                  - ec2:DescribeKeyPairs
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeSubnets
                  - ec2:DescribeVpcs
                  - ec2:DetachVolume
                  - ec2:DisassociateAddress
                  - ec2:DisassociateIamInstanceProfile
                  - ec2:ModifyInstanceAttribute
                  - ec2:ModifyInstanceAttribute
                  - ec2:ModifyInstanceAttribute
                  - ec2:ModifyInstanceCreditSpecification
                  - ec2:ModifyInstancePlacement
                  - ec2:MonitorInstances
                  - ec2:ReleaseAddress
                  - ec2:ReplaceIamInstanceProfileAssociation
                  - ec2:RunInstances
                  - ec2:StartInstances
                  - ec2:StopInstances
                  - ec2:TerminateInstances
                  - elasticbeanstalk:CreateApplication
                  - elasticbeanstalk:CreateApplicationVersion
                  - elasticbeanstalk:CreateConfigurationTemplate
                  - elasticbeanstalk:CreateEnvironment
                  - elasticbeanstalk:DeleteApplication
                  - elasticbeanstalk:DeleteApplicationVersion
                  - elasticbeanstalk:DeleteConfigurationTemplate
                  - elasticbeanstalk:DescribeApplications
                  - elasticbeanstalk:DescribeApplicationVersions
                  - elasticbeanstalk:DescribeConfigurationSettings
                  - elasticbeanstalk:DescribeEnvironment
                  - elasticbeanstalk:DescribeEnvironmentHealth
                  - elasticbeanstalk:DescribeEnvironments
                  - elasticbeanstalk:DescribeInstancesHealth
                  - elasticbeanstalk:DescribePlatformVersion
                  - elasticbeanstalk:TerminateEnvironment
                  - elasticbeanstalk:UpdateApplication
                  - elasticbeanstalk:UpdateApplicationResourceLifecycle
                  - elasticbeanstalk:UpdateApplicationVersion
                  - elasticbeanstalk:UpdateConfigurationTemplate
                  - elasticbeanstalk:UpdateEnvironment
                  - events:DeleteRule
                  - events:DescribeRule
                  - events:ListTagsForResource
                  - events:PutRule
                  - events:PutTargets
                  - events:RemoveTargets
                  - events:TagResource
                  - events:UntagResource
                  - kinesis:AddTagsToStream
                  - kinesis:CreateStream
                  - kinesis:DecreaseStreamRetentionPeriod
                  - kinesis:DeleteStream
                  - kinesis:DescribeStream
                  - kinesis:IncreaseStreamRetentionPeriod
                  - kinesis:RemoveTagsFromStream
                  - kinesis:StartStreamEncryption
                  - kinesis:StopStreamEncryption
                  - kinesis:UpdateShardCount
                  - lambda:CreateAlias
                  - lambda:CreateFunction
                  - lambda:DeleteAlias
                  - lambda:DeleteFunction
                  - lambda:DeleteFunctionConcurrency
                  - lambda:GetFunction
                  - lambda:ListTags
                  - lambda:ListVersionsByFunction
                  - lambda:PublishVersion
                  - lambda:PutFunctionConcurrency
                  - lambda:TagResource
                  - lambda:UntagResource
                  - lambda:UpdateAlias
                  - lambda:UpdateFunctionCode
                  - lambda:UpdateFunctionConfiguration
                  - s3:CreateBucket
                  - s3:DeleteBucket
                  - s3:DeleteBucketWebsite
                  - s3:GetBucketLocation
                  - s3:GetBucketPolicy
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:ListBucket
                  - s3:ListBucketVersions
                  - s3:PutAccelerateConfiguration
                  - s3:PutAnalyticsConfiguration
                  - s3:PutBucketAcl
                  - s3:PutBucketCORS
                  - s3:PutBucketLogging
                  - s3:PutBucketNotification
                  - s3:PutBucketPublicAccessBlock
                  - s3:PutBucketVersioning
                  - s3:PutBucketWebsite
                  - s3:PutEncryptionConfiguration
                  - s3:PutInventoryConfiguration
                  - s3:PutLifecycleConfiguration
                  - s3:PutMetricsConfiguration
                  - s3:PutObject
                  - s3:PutReplicationConfiguration
                  - sns:CreateTopic
                  - sns:DeleteTopic
                  - sns:GetTopicAttributes
                  - sns:ListSubscriptionsByTopic
                  - sns:ListTopics
                  - sns:SetSubscriptionAttributes
                  - sns:Subscribe
                  - sns:Unsubscribe
                  - sqs:CreateQueue
                  - sqs:DeleteQueue
                  - sqs:GetQueueAttributes
                  - sqs:GetQueueUrl
                  - sqs:ListQueueTags
                  - sqs:TagQueue
                  - sqs:UntagQueue
                Effect: Allow
                Resource:
                  - '*'
              - Action:
                  - s3:DeleteObject
                  - s3:GetObjectAcl
                  - s3:GetObjectVersionAcl
                  - s3:PutBucketPolicy
                  - s3:PutObjectAcl
                  - s3:PutObjectVersionAcl
                Effect: Allow
                Resource:
                  - !Sub 'arn:${AWS::Partition}:s3:::elasticbeanstalk-${AWS::Region}-${AWS::AccountId}'
                  - !Sub 'arn:${AWS::Partition}:s3:::elasticbeanstalk-${AWS::Region}-${AWS::AccountId}/*'
              - Action:
                  - ec2:AuthorizeSecurityGroupEgress
                  - ec2:AuthorizeSecurityGroupIngress
                  - ec2:DeleteSecurityGroup
                  - ec2:RevokeSecurityGroupEgress
                  - ec2:RevokeSecurityGroupIngress
                Condition:
                  StringEquals:
                    ec2:Vpc: !Sub 'arn:${AWS::Partition}:ec2:${AWS::Region}:${AWS::AccountId}:vpc/${VpcId}'
                Effect: Allow
                Resource: '*'
              - Action:
                  - cloudformation:CreateChangeSet
                Effect: Allow
                Resource:
                  - !Sub 'arn:${AWS::Partition}:cloudformation:${AWS::Region}:aws:transform/Serverless-2016-10-31'
                  - !Sub 'arn:${AWS::Partition}:cloudformation:${AWS::Region}:aws:transform/CodeStar'
              - Action:
                  - cloudformation:CreateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStack*
                  - cloudformation:GetTemplate
                  - cloudformation:ListStackResources
                  - cloudformation:UpdateStack
                Effect: Allow
                Resource:
                  - !Sub 'arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/awseb-e-*'
              - Action:
                  - iam:PassRole
                Effect: Allow
                Resource:
                  - !GetAtt 'EBTrustRole.Arn'
              - Action:
                  - iam:PassRole
                Condition:
                  StringEquals:
                    iam:PassedToService: ec2.amazonaws.com
                Effect: Allow
                Resource:
                  - !GetAtt 'EBInstanceProfileRole.Arn'
              - Action:
                  - iam:CreateServiceLinkedRole
                  - iam:DeleteRole
                  - iam:DeleteUser
                  - iam:GetRole
                Effect: Allow
                Resource: '*'
              - Action:
                  - iam:AttachRolePolicy
                  - iam:AttachUserPolicy
                  - iam:CreateRole
                  - iam:CreateUser
                  - iam:DeleteRolePolicy
                  - iam:DeleteUserPolicy
                  - iam:DetachRolePolicy
                  - iam:DetachUserPolicy
                  - iam:PutRolePermissionsBoundary
                  - iam:PutUserPermissionsBoundary
                  - iam:PutRolePolicy
                Condition:
                  StringEquals:
                    iam:PermissionsBoundary: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/CodeStar_${ProjectId}_PermissionsBoundary'
                Effect: Allow
                Resource: '*'
              - Action:
                  - kms:CreateKey
                  - kms:CreateAlias
                  - kms:DeleteAlias
                  - kms:DisableKey
                  - kms:EnableKey
                  - kms:UpdateAlias
                  - kms:TagResource
                  - kms:UntagResource
                Effect: Allow
                Resource: '*'
              - Action:
                  - ssm:GetParameter*
                Condition:
                  StringEquals:
                    ssm:ResourceTag/awscodestar:projectArn: !Sub 'arn:${AWS::Partition}:codestar:${AWS::Region}:${AWS::AccountId}:project/${ProjectId}'
                Effect: Allow
                Resource: '*'
          PolicyName: CodeStarWorkerCloudFormationRolePolicy
      RoleName: !Sub 'CodeStarWorker-${ProjectId}-CloudFormation'
    Type: AWS::IAM::Role
  CodeBuildProject:
    Condition: CreateCodeBuildResources
    DependsOn:
      - ToolChainRole
    Properties:
      Artifacts:
        Packaging: zip
        Type: codepipeline
      Description: !Join
        - ''
        - - 'AWS CodeStar created CodeBuild Project for '
          - !Ref 'ProjectId'
      Environment:
        ComputeType: small
        EnvironmentVariables:
          - Name: S3_BUCKET
            Value: !Ref 'S3Bucket'
          - Name: WEBSITE_S3_PREFIX
            Value: !If
              - CreateWebSiteS3Bucket
              - !Join
                - ''
                - - https://s3-eu-west-1.amazonaws.com/
                  - !Ref 'AWS::NoValue'
              - NoVal
          - Name: WEBSITE_S3_BUCKET
            Value: !If
              - CreateWebSiteS3Bucket
              - !Ref 'AWS::NoValue'
              - NoVal
          - Name: PROJECT_ID
            Value: !Ref 'ProjectId'
          - Name: ACCOUNT_ID
            Value: !Ref 'AWS::AccountId'
          - Name: PARTITION
            Value: !Ref 'AWS::Partition'
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        Type: LINUX_CONTAINER
      Name: !Ref 'ProjectId'
      ServiceRole: !Ref 'ToolChainRole'
      Source:
        Type: codepipeline
    Type: AWS::CodeBuild::Project
  CodeCommitRepo:
    Description: Creating AWS CodeCommit repository for application source code
    Properties:
      Code:
        BranchName: master
        S3:
          Bucket: !Ref 'CodeS3Bucket'
          Key: !Ref 'CodeS3Key'
      RepositoryDescription: !Join
        - ''
        - - !Ref 'ProjectId'
          - ' project repository'
      RepositoryName: !Ref 'RepositoryName'
    Type: AWS::CodeCommit::Repository
  EBInstanceProfile:
    Description: Creating Amazon EC2 instance profile for AWS Elastic Beanstalk
    Properties:
      Path: /
      Roles:
        - !Ref 'EBInstanceProfileRole'
    Type: AWS::IAM::InstanceProfile
  EBInstanceProfileRole:
    Description: Creating instance profile role in IAM for AWS Elastic Beanstalk
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
        Version: 2012-10-17
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - s3:GetObject
                  - ec2:ModifyInstanceCreditSpecification
                  - elasticbeanstalk:PutInstanceStatistics
                Effect: Allow
                Resource: '*'
            Version: 2012-10-17
          PolicyName: EBInstancePolicy
      RoleName: !Sub 'CodeStarWorker-${ProjectId}-EB'
    Type: AWS::IAM::Role
  EBTrustRole:
    Description: Creating service role in IAM for AWS Elastic Beanstalk
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - elasticbeanstalk.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/service-role/AWSElasticBeanstalkEnhancedHealth'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AWSElasticBeanstalkManagedUpdatesCustomerRolePolicy'
      Path: /
      RoleName: !Sub 'CodeStarWorker-${ProjectId}-EBService'
    Type: AWS::IAM::Role
  PermissionsBoundaryPolicy:
    DeletionPolicy: Retain
    Description: Creating an IAM managed policy for defining the permissions boundary for an AWS CodeStar project
    Properties:
      Description: IAM policy to define the permissions boundary for IAM entities created in an AWS CodeStar project
      ManagedPolicyName: !Sub 'CodeStar_${ProjectId}_PermissionsBoundary'
      PolicyDocument:
        Statement:
          - Action:
              - '*'
            Effect: Allow
            Resource:
              - !Sub 'arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/awscodestar-${ProjectId}-infrastructure/*'
              - !Sub 'arn:${AWS::Partition}:codebuild:${AWS::Region}:${AWS::AccountId}:project/${ProjectId}'
              - !Sub 'arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${RepositoryName}'
              - !Sub 'arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${ProjectId}-Pipeline'
              - !Sub 'arn:${AWS::Partition}:elasticbeanstalk:${AWS::Region}:${AWS::AccountId}:application/${ProjectId}app'
              - !Sub 'arn:${AWS::Partition}:elasticbeanstalk:${AWS::Region}:${AWS::AccountId}:applicationversion/${ProjectId}app/*'
              - !Sub 'arn:${AWS::Partition}:elasticbeanstalk:${AWS::Region}:${AWS::AccountId}:environment/${ProjectId}app/${ProjectId}app'
              - !Sub 'arn:${AWS::Partition}:s3:::${S3Bucket}'
              - !Sub 'arn:${AWS::Partition}:s3:::${S3Bucket}/*'
            Sid: 1
          - Action:
              - cloudformation:GetTemplate
              - cloudformation:ListStackResources
              - cloudformation:UpdateStack
              - cloudformation:DescribeStack*
            Effect: Allow
            Resource:
              - !Sub 'arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/awseb-e-*'
            Sid: 2
          - Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:GenerateDataKey
            Effect: Allow
            Resource:
              - !Sub 'arn:${AWS::Partition}:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3'
            Sid: 3
          - Action:
              - autoscaling:DescribeAutoScalingGroups
              - autoscaling:DescribeLaunchConfigurations
              - autoscaling:DescribeScalingActivities
              - autoscaling:ResumeProcesses
              - autoscaling:SuspendProcesses
              - ec2:Describe*
            Effect: Allow
            Resource: '*'
            Sid: 4
          - Action:
              - iam:PassRole
            Effect: Allow
            Resource:
              - !GetAtt 'CloudFormationTrustRole.Arn'
            Sid: 5
          - Action:
              - cloudtrail:CreateTrail
              - cloudtrail:StartLogging
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:DescribeLogGroups
              - logs:PutLogEvents
              - sns:Get*
              - sns:List*
              - sns:Publish
              - sns:Subscribe
              - xray:Put*
            Effect: Allow
            Resource: '*'
            Sid: 6
          - Action:
              - cloudformation:*
            Condition:
              ForAnyValue:StringLike:
                cloudformation:ImportResourceTypes:
                  - '*'
            Effect: Deny
            Resource:
              - !Sub 'arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/awscodestar-${ProjectId}-infrastructure/*'
            Sid: 7
        Version: 2012-10-17
    Type: AWS::IAM::ManagedPolicy
  ProjectPipeline:
    DependsOn:
      - ToolChainRole
    Description: Creating a deployment pipeline for your project in AWS CodePipeline
    Properties:
      ArtifactStore:
        Location: !Ref 'S3Bucket'
        Type: S3
      Name: !Sub '${ProjectId}-Pipeline'
      RoleArn: !GetAtt 'ToolChainRole.Arn'
      Stages:
        - Actions:
            - ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: 1
              Configuration:
                BranchName: master
                PollForSourceChanges: false
                RepositoryName: !Ref 'RepositoryName'
              InputArtifacts: [
              ]
              Name: ApplicationSource
              OutputArtifacts:
                - Name: !Sub '${ProjectId}-SourceArtifact'
              RunOrder: 1
          Name: Source
        - !If
          - CreateCodeBuildResources
          - Actions:
              - ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Provider: CodeBuild
                  Version: 1
                Configuration:
                  ProjectName: !Ref 'ProjectId'
                InputArtifacts:
                  - Name: !Sub '${ProjectId}-SourceArtifact'
                Name: CodeBuild
                OutputArtifacts:
                  - Name: !Sub '${ProjectId}-BuildArtifact'
                RunOrder: 1
            Name: Build
          - !Ref 'AWS::NoValue'
        - Actions:
            - ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_NAMED_IAM
                ChangeSetName: pipeline-changeset
                ParameterOverrides: !Sub "{\n  \"ProjectId\":\"${ProjectId}\",\n  \"InstanceType\"\
              :\"${InstanceType}\",\n  \"KeyPairName\":\"${KeyPairName}\",\n  \"SubnetId\"\
              :\"${SubnetId}\",\n  \"VpcId\":\"${VpcId}\",\n  \"SolutionStackName\"\
              :\"${SolutionStackName}\",\n  \"EBTrustRole\":\"${EBTrustRole}\",\n\
              \  \"EBInstanceProfile\":\"${EBInstanceProfile}\"\n}\n"
                RoleArn: !GetAtt 'CloudFormationTrustRole.Arn'
                StackName: !Sub 'awscodestar-${ProjectId}-infrastructure'
                TemplateConfiguration: !Sub '${ProjectId}-BuildArtifact::template-configuration.json'
                TemplatePath: !Sub '${ProjectId}-BuildArtifact::template-export.yml'
              InputArtifacts:
                - Name: !Sub '${ProjectId}-BuildArtifact'
              Name: GenerateChangeSet
              OutputArtifacts: [
              ]
              RunOrder: 1
            - ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: pipeline-changeset
                StackName: !Sub 'awscodestar-${ProjectId}-infrastructure'
              InputArtifacts: [
              ]
              Name: ExecuteChangeSet
              OutputArtifacts: [
              ]
              RunOrder: 2
          Name: Deploy
    Type: AWS::CodePipeline::Pipeline
  S3ArtifactBucketPolicy:
    Description: Setting Amazon S3 bucket policy for AWS CodePipeline access
    Properties:
      Bucket: !Ref 'S3Bucket'
      PolicyDocument:
        Id: SSEAndSSLPolicy
        Statement:
          - Action: s3:PutObject
            Condition:
              Bool:
                aws:SecureTransport: false
              StringNotEquals:
                s3:x-amz-server-side-encryption: aws:kms
            Effect: Deny
            Principal: '*'
            Resource: !Sub 'arn:${AWS::Partition}:s3:::${S3Bucket}/*'
            Sid: DenyUnEncryptedObjectUploads
          - Action:
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:GetBucketVersioning
              - s3:PutObject
            Condition:
              Bool:
                aws:SecureTransport: true
            Effect: Allow
            Principal:
              AWS:
                - !GetAtt 'ToolChainRole.Arn'
            Resource:
              - !Sub 'arn:${AWS::Partition}:s3:::${S3Bucket}/*'
              - !Sub 'arn:${AWS::Partition}:s3:::${S3Bucket}'
            Sid: OnlyCodeApplications
        Version: 2012-10-17
    Type: AWS::S3::BucketPolicy
  S3Bucket:
    DeletionPolicy: Retain
    Description: Creating Amazon S3 bucket for AWS CodePipeline artifacts
    Properties:
      BucketName: !Join
        - '-'
        - - aws
          - codestar
          - !Ref 'AWS::Region'
          - !Ref 'AWS::AccountId'
          - !Ref 'ProjectId'
          - pipe
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'ProjectId'
              - S3Bucket
      VersioningConfiguration:
        Status: Enabled
    Type: AWS::S3::Bucket
  SourceEvent:
    Properties:
      Description: Rule for Amazon CloudWatch Events to detect changes to the source repository and trigger pipeline execution
      EventPattern:
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceName:
            - master
          referenceType:
            - branch
        detail-type:
          - CodeCommit Repository State Change
        resources:
          - !GetAtt 'CodeCommitRepo.Arn'
        source:
          - aws.codecommit
      Name: !Join
        - '-'
        - - awscodestar
          - !Ref 'ProjectId'
          - SourceEvent
      State: ENABLED
      Targets:
        - Arn: !Sub 'arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${ProjectId}-Pipeline'
          Id: ProjectPipelineTarget
          RoleArn: !GetAtt 'ToolChainRole.Arn'
    Type: AWS::Events::Rule
  ToolChainRole:
    DeletionPolicy: Retain
    Description: Creating toolchain role in IAM for Amazon EC2 instances
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
                - codedeploy.amazonaws.com
                - codepipeline.amazonaws.com
                - codestar.amazonaws.com
                - elasticbeanstalk.amazonaws.com
                - events.amazonaws.com
                - lambda.amazonaws.com
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AdministratorAccess-AWSElasticBeanstalk'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonS3FullAccess'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AWSCodeBuildAdminAccess'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AWSCodeCommitFullAccess'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AWSCodeDeployFullAccess'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AWSCodePipeline_FullAccess'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AWSCodeStarFullAccess'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AWSLambda_FullAccess'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/CloudWatchEventsFullAccess'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/CloudWatchLogsFullAccess'
      Path: /
      PermissionsBoundary: !Ref 'PermissionsBoundaryPolicy'
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - kms:GenerateDataKey*
                  - kms:Encrypt
                  - kms:Decrypt
                  - iam:PassRole
                  - cloudformation:CreateChangeSet
                  - cloudformation:ExecuteChangeSet
                Effect: Allow
                Resource: '*'
          PolicyName: ToolChainWorkerPolicy
      RoleName: !Sub 'CodeStarWorker-${ProjectId}-ToolChain'
    Type: AWS::IAM::Role